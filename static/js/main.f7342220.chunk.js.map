{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Popup.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Popup","onClick","closePopup","App","onSearchChange","event","setState","searchfield","target","value","openPopup","popup","state","a","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Fragment","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,kECOCQ,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACnB,OACA,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA2BJ,EAA3B,YAAyCK,IAAI,cACrD,gCACI,6BAAKJ,IACL,4BAAIC,WCyBDI,EA9BE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAKjB,OACE,8BAQYA,EAAOC,KAAI,SAACC,EAAKC,GAEd,OAAO,cAAC,EAAD,CAEFV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KACfC,MAAOK,EAAOG,GAAGR,OAHXQ,SCThBC,EATG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAClB,OACI,uBAAOC,KAAO,SAASC,YAAc,gBAAgBC,SAAUH,EAC/DT,UAAU,kCCSDa,EAZA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAS,kBAAmBC,OAAS,SAAvE,SACAJ,EAAMK,YCQCC,G,MAXD,SAACN,GACX,OACI,qBAAKd,UAAU,cAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,eAAeqB,QAASP,EAAMQ,WAA7C,qBCmFDC,G,wDA1EX,aAAc,IAAD,8BACT,gBAcAC,eAAiB,SAACC,GAClB,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAhBjC,EA+BhBC,UAAY,WACR,EAAKJ,SAAS,CAACK,OAAM,KAhCT,EAmChBT,WAAa,WACT,EAAKI,SAAS,CAACK,OAAM,KAlClB,EAAKC,MAAQ,CAET5B,OAAS,GACTuB,YAAc,GACdI,OAAO,GANF,E,4FAmBhB,iCAAAE,EAAA,sEAESC,MAAM,8CACV5C,MAAK,SAAA6C,GACF,OAAOA,EAASC,UAEnB9C,MAAK,SAAA+C,GACF,EAAKX,SAAS,CAACtB,OAASiC,OAPhC,2C,0EAoBG,WAEI,MAA6BC,KAAKN,MAA3B5B,EAAP,EAAOA,OAAOuB,EAAd,EAAcA,YAERY,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAShB,EAAYe,kBAItD,OAA6B,IAA1BH,EAAeK,OACP,gDAKN,eAAC,IAAMC,SAAP,WACMP,KAAKN,MAAMD,MAAQ,cAAC,EAAD,CAAOT,WAAcgB,KAAKhB,aAAgB,GACnE,sBAAKtB,UAAU,KAAf,UACI,0CAEA,wBAAQqB,QAASiB,KAAKR,UAAtB,wBACA,cAAC,EAAD,CAAWrB,aAAc6B,KAAKd,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUpB,OAAQmC,gB,GAhEpBO,IAAMC,YCPxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BjE,M","file":"static/js/main.f7342220.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({id,name,email}) => {\r\n    return(\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n        <img src ={`https://robohash.org/${id}?200x200`} alt=\"RoboImage\" />\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    // const cardArray = robots.map((user,i) => {\r\n    //     return <Card id={robots[i].id} key={i} name={robots[i].name} email={robots[i].email} />\r\n    // })\r\n  return (\r\n    <div>\r\n         {/* <Card id={robots[0].id} name={robots[0].name} email={robots[0].email} />\r\n        <Card id={robots[1].id} name={robots[1].name} email={robots[1].email}/>\r\n        <Card id={robots[2].id} name={robots[2].name} email={robots[2].email}/> */}\r\n\r\n         {/* {cardArray} */}\r\n\r\n            {\r\n                robots.map((user,i) => \r\n                {\r\n                   return <Card \r\n                        key = {i}\r\n                        id={robots[i].id} \r\n                        name={robots[i].name}\r\n                         email={robots[i].email} />\r\n                     })\r\n            }\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n  return (\r\n      <input type = \"search\" placeholder = 'Search Robots' onChange={searchChange}\r\n      className=\"pa3 ba b-green bg-light-blue\"/>\r\n  )   \r\n\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n    return (\r\n        <div style={{overflowY: 'scroll', border : '3px solid black', height : '500px'}}>\r\n       {props.children}\r\n\r\n        </div>\r\n    )\r\n    \r\n\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport './popup.css';\r\n\r\nconst Popup = (props) => {\r\n    return(\r\n        <div className=\"popup--back\">\r\n            <div className=\"popup--content\">\r\n                <div className=\"popup--close\" onClick={props.closePopup}>x</div>\r\n                </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Popup;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from \"../components/Scroll\";\r\nimport Popup from '../components/Popup';\r\nimport \"./App.css\";\r\n\r\n//state is an object that describe the app!\r\n\r\n// const state = {\r\n//     robots : robots,\r\n//     searchfield : ''\r\n// }\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            // message : 'VishuFans'\r\n            robots : [],\r\n            searchfield : '',\r\n            popup: false\r\n\r\n        }\r\n        \r\n    }\r\n     \r\n    // changeMessage = () => {\r\n    //     this.setState({message : \"You suscribed successfully!\"});\r\n    // }\r\n        onSearchChange = (event) => {\r\n        this.setState({searchfield : event.target.value});\r\n         }\r\n\r\n async componentDidMount(){\r\n    \r\n    await fetch('https://jsonplaceholder.typicode.com/users')\r\n     .then(response => {\r\n         return response.json()\r\n     })\r\n     .then(users => {\r\n         this.setState({robots : users});\r\n     })\r\n     \r\n }\r\n\r\n openPopup = () => {\r\n     this.setState({popup:true});\r\n }\r\n\r\n closePopup = () => {\r\n     this.setState({popup:false})\r\n }\r\n\r\n    render(){\r\n\r\n        const {robots,searchfield} = this.state;\r\n        \r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\r\n           }) \r\n\r\n           if(filteredRobots.length === 0) {\r\n               return <h1>Loading.......</h1>\r\n           }\r\n           else {\r\n\r\n            return(\r\n                <React.Fragment>\r\n                     {this.state.popup ? <Popup closePopup = {this.closePopup}/> : \"\"}\r\n                <div className=\"tc\">\r\n                    <h1>RoboFans</h1>\r\n                    {/* <button type=\"button\" onClick={this.changeMessage}>SUSCRIBE!</button> */}\r\n                    <button onClick={this.openPopup}>Open Popup</button>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n                </React.Fragment>\r\n            )\r\n\r\n            }\r\n         }\r\n    }\r\n\r\n \r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons'; \nimport App from './containers/App';\n\nReactDOM.render(  \n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}